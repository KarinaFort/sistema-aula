<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9f8AvPX/ALz1/wC89f8AvPX/AL30XQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANv5VQDb
        +v8A2/r/ANv6/wDb+v8A2/r/ANv6/wDb+v8A2/r/ANv6/wDb+v8A2/r/ANv6/wDb+v8A2/r/ANv6/wDb
        +v8AvPX/ALz1/wC89f8AvPX/ALz1/wC89f8AvfRdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAA2/lVANv6/wDb+v8A2/r/ANv6/wDb+v8A2/r/ANv6/wDb+v8A2/r/ANv6/wDb+v8A2/r/ANv6/wDb
        +v8A2/r/ANv6/wC89f8AvPX/ALz1/wC89f8AvPX/ALz1/wC99F0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAADb+VUA2/r/ANv6/wDb+v8A2/r/ANv6/wDb+v8A2/r/ANv6/wDb+v8A2/r/ANv6/wDb
        +v8A2/r/ANv6/wDb+v8A2/r/ALz1/wC89f8AvPX/ALz1/wC89f8AvPX/AL30XQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAANv5VQDb+v8A2/r/ANv6/wDb+v8A2/r/ANv6/wDb+v8A2/r/ANv6/wDb
        +v8A2/r/ANv6/wDb+v8A2/r/ANv6/wDb+v8AvPX/ALz1/wC89f8AvPX/ALz1/wC89f8AvfRdAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2/lVANv6/wDb+v8A2/r/ANv6/wDb+v8A2/r/ANv6/wDb
        +v8A2/r/ANv6/wDb+v8A2/r/ANv6/wDb+v8A2/r/ANv6/wC89f8AvPX/ALz1/wC89f8AvPX/ALz1/wC9
        9F0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADb+VUA2/r/ANv6/wDb+v8A2/r/ANv6/wDb
        +v8A2/r/ANv6/wDb+v8A2/r/ANv6/wDb+v8A2/r/ANv6/wDb+v8A2/r/ALz1/wC89f8AvPX/ALz1/wC8
        9f8AvPX/AL30XQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANv5VQDb+v8A2/r/ANv6/wDb
        +v8A2/r/ANv6/wDb+v8A2/r/ANv6/wDb+v8A2/r/ANv6/wDb+v8A2/r/ANv6/wDb+v8AvPX/ALz1/wC8
        9f8AvPX/ALz1/wC89f8AvfRdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2/lVANv6/wDb
        +v8A2/r/ANv6/wDb+v8A2/r/ANv6/wDb+v8A2/r/ANv6/wDb+v8A2/r/ANv6/wDb+v8A2/r/ANv6/wC8
        9f8AvPX/ALz1/wC89f8AvPX/ALz1/wC99F0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvPREALz1/wCq
        8v8Aeev/AHnr/wB56/8Aeev/AHnr/wB56/8Aeev/AHnr/wB56/8Aeev/AHnr/wB56/8Aeev/AHnr/wCm
        8v8A2/r/ALz1/wCj8v8Aeev/AHnr/wB56/8Aeev/AKXx/wC89f8AvfZsAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAvPXLAKry/wB56/8Aeev/AHnr/wB56/8Aeev/AHnr/wB56/8Aeev/AHnr/wB56/8Aeev/AHnr/wB5
        6/8Aeev/AIbt/wDb+v8AvPX/AInu/wB56/8Aeev/AHnr/wB56/8ApfH/ALz15wDG/wkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAC89lQAqvL/AHnr/wB56/8Aeev/AHnr/wB56/8Aeev/AHnr/wB56/8Aeev/AHnr/wB5
        6/8Aeev/AHnr/wB56/8Aeev/AMX2/wCz8/8Aeuv/AHnr/wB56/8Aeev/AHnr/wCk8f8AvPRzAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAID/AgCp8e0Aeev/AHnr/wB56/8Aeev/AHnr/wB56/8Aeev/AHnr/wB5
        6/8Aeev/AHnr/wB56/8Aeev/AHnr/wB56/8AnfH/AJnv/wB56/8Aeev/AHnr/wB56/8Aeev/AKTy9wC/
        /wwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK3zlQCM7/kAjO/5AYzu+gaJ6/8Giev/Bonr/waJ
        6/8Giev/Bonr/waJ6/8Giev/Bonr/waJ6/8Fiuz+AIzv+QCT7/UAkO71A4jr/QaI6v8Diez8AIru+QCK
        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
        Mf//gDn//4A///+AP///s7//////////////////
</value>
  </data>
</root>